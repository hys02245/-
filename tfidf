{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "mount_file_id": "1YmY2ESHe7kRRak6nDAROXRgdLiH5jHBB",
      "authorship_tag": "ABX9TyPa61puexYNwRTO9rwAs7Yl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/hys02245/-/blob/main/tfidf\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CmS999_1Q5FM",
        "outputId": "ab57c20a-7747-43bd-9cf6-f8e680c15fd8"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SG4WDU2U8FpH"
      },
      "source": [
        "!pip install ckiptagger\n",
        "!pip install tensorflow\n",
        "!pip install gdown\n",
        "from ckiptagger import data_utils\n",
        "data_utils.download_data_gdown(\"./\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QcMNU-G68AaR"
      },
      "source": [
        "import csv\n",
        "import jieba, re, os, sys\n",
        "from ckiptagger import WS\n",
        "\n",
        "corpus = []\n",
        "\n",
        "ws = WS(\"./data\")\n",
        "with open('/content/drive/MyDrive/處理中備份資料/2018預測用_Final 0601(對照檔).csv', encoding = 'big5hkscs', newline='') as csvfile:\n",
        "  rows = csv.reader(csvfile)\n",
        "  for row in rows:\n",
        "    corpus.append(ws([row[6]]))\n",
        "#print(corpus) \n",
        "\n",
        "corpus=corpus[1:]\n",
        "\n",
        "with open('/content/drive/MyDrive/處理中備份資料/KAM測試集_0601.csv', encoding = 'big5hkscs', newline='') as csvfile:\n",
        "  rows = csv.reader(csvfile)\n",
        "  for row in rows:\n",
        "    corpus.append(ws([row[3]]))\n",
        "\n",
        "corpus1=[]\n",
        "for item in corpus:\n",
        "  corpus1.append(\" \".join(item[0]))\n",
        "#print(corpus1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rie79TIl753b"
      },
      "source": [
        "import jieba\n",
        "import jieba.posseg as pseg\n",
        "import os\n",
        "import sys\n",
        "from sklearn import feature_extraction\n",
        "from sklearn.feature_extraction.text import TfidfTransformer\n",
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        " \n",
        "vectorizer=CountVectorizer()\n",
        "transformer=TfidfTransformer()\n",
        "tfidf=transformer.fit_transform(vectorizer.fit_transform(corpus1))\n",
        "word=vectorizer.get_feature_names()\n",
        "weight=tfidf.toarray()\n",
        "\n",
        "with open(\"/content/drive/MyDrive/處理中備份資料/outputnew.csv\",\"w\") as csvfile: \n",
        "  writer = csv.writer(csvfile)\n",
        "  for i in range(len(weight)):\n",
        "    writer.writerow([u\"第\",i+1,u\"個文本tf-idf權重\"])\n",
        "    for j in range(len(word)):\n",
        "      if weight[i][j] != 0 :\n",
        "        writer.writerow([word[j],weight[i][j],Counter(corpus[i][0])[word[j]]])"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}